<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PX.SiteMap</name>
    </assembly>
    <members>
        <member name="T:PX.SiteMap.DAC.PortalMap.nodeID">
            <exclude/>
        </member>
        <member name="T:PX.SiteMap.DAC.PortalMap.screenID">
            <exclude/>
        </member>
        <member name="T:PX.SiteMap.DAC.PortalMap.parentID">
            <exclude/>
        </member>
        <member name="T:PX.SiteMap.DAC.PortalMap.position">
            <exclude/>
        </member>
        <member name="T:PX.SiteMap.DAC.SiteMap.listIsEntryPoint">
            <exclude/>
        </member>
        <member name="T:PX.SiteMap.Graph.AccessFavoritesExt">
            <summary>
            This extension allows to automaticaly delete favorite or pinned records of certain user
            right after deletion of this user.
            These records are placed in <see cref="T:PX.Web.UI.Frameset.Model.DAC.MUIFavoriteTile"/>, <see cref="T:PX.Web.UI.Frameset.Model.DAC.MUIFavoriteWorkspace"/>,
            <see cref="T:PX.Web.UI.Frameset.Model.DAC.MUIFavoriteScreen"/>, <see cref="T:PX.Web.UI.Frameset.Model.DAC.MUIPinnedScreen"/> and <see cref="T:PX.Web.UI.Frameset.Model.DAC.MUIUserPreferences"/> tables.
            </summary>
            <remarks>
            Having <see cref="T:PX.Data.PXParentAttribute"/> to define cascade deletion from <see cref="T:PX.SM.Users"/> to child records
            is not enough if there are no data views of child types on the graph. Since it is impossible to place them on the original graph,
            we need this extension instead.
            </remarks>
        </member>
        <member name="T:PX.SiteMap.Graph.SiteMapMaintRelations">
            <summary>
            This extension allows to automaticaly delete <see cref="T:PX.Web.UI.SharedColumnSettings.GridPreferences"/> records of certain screen
            right after deletion of it's <see cref="T:PX.SiteMap.DAC.SiteMap"/>.
            </summary>
            <remarks>
            Having <see cref="T:PX.Data.PXParentAttribute"/> to define cascade deletion from <see cref="T:PX.SiteMap.DAC.SiteMap"/> to <see cref="T:PX.Web.UI.SharedColumnSettings.GridPreferences"/>
            is not enough if there are no data views of child types on the graph.
            </remarks>
        </member>
        <member name="M:PX.SiteMap.GraphExtensions.DashboardMaintExt._(PX.Data.Events.CacheAttached{PX.Data.FilterHeader.screenID})">
            <remarks>
            <para>We should avoid any attributes that produce SiteMap-based data views on CacheAttached
            because <see cref="T:PX.Data.PXScreenToSiteMapAddHelperBase"/> uses internal SiteMap-derived DAC.</para>
            <para>An example: <see cref="T:PX.Data.PXFilterableAttribute"/> adds a data view for <see cref="T:PX.Data.FilterHeader"/>.
            <see cref="T:PX.Data.FilterHeader"/> has a cache extension <see cref="T:PX.Web.UI.Frameset.Model.FilterHeaderExt"/> that adds
            <see cref="T:PX.Web.UI.Frameset.Model.SiteMapSelectorAttribute"/> to the <see cref="P:PX.Data.FilterHeader.ScreenID"/> field.
            <see cref="T:PX.Web.UI.Frameset.Model.SiteMapSelectorAttribute"/> creates a data view for <see cref="N:PX.SiteMap"/> DAC on CacheAttached.
            It leads to adding SiteMap -&gt; SiteMap cache mapping to <see cref="T:PX.Data.PXCacheCollection"/>
            before any code of the <see cref="T:PX.Data.PXScreenToSiteMapAddHelperBase"/> is executed.</para>
            <para><c>PXGraph.Caches[typeof(SiteMapInternal)]</c> returns
            <c>PXCache&lt;SiteMapInternal&gt;</c> (expected), but <c>PXGraph.Caches[typeof(SiteMap)]</c>
            returns <c>PXCache&lt;SiteMap&gt;</c> and not <c>PXCache&lt;SiteMapInternal&gt;</c>
            like it happens when there is no <see cref="T:PX.Data.PXFilterableAttribute"/>.</para>
            <para>So, when CacheAttached is called for <see cref="T:PX.Data.PXParentAttribute"/> declared on some external DAC,
            it adds its RowDeleted event handler to <c>PXCache&lt;SiteMap&gt;</c>, not to <c>PXCache&lt;SiteMapInternal&gt;</c>.
            That breaks the cascade deletion behavior since the <see cref="!:SiteMapInternal"/> record is deleted,
            but there is no RowDeleted event handler in <c>PXCache&lt;SiteMapInternal&gt;</c>.</para>
            </remarks>
        </member>
    </members>
</doc>
